{"version":3,"sources":["staticFiles.js","logo.svg","bios/seabios.bin","bios/vgabios.bin","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","v86state.bin","windows98.img","__webpack_require__","p","windows98URL","staticFiles","v86stateURL","WELCOME_MESSAGE","io","process","getURLAsBuffer","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","responseType","addEventListener","status","response","send","styles","screen","whiteSpace","font","concat","lineHeight","input","marginTop","textAlign","timeout","ms","setTimeout","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","whatToSay","busy","serialOutput","say","bind","assertThisInitialized","window","onChange","onKeyPress","string","setState","sayText","console","log","emulator","serial0_send","indexOf","MB","all","then","_ref","v86State","slicedToArray","_this2","V86Starter","screen_container","bios","seabios","vga_bios","vgabios","hda","async","size","autostart","memory_size","vga_memory_size","disable_mouse","disable_keyboard","add_listener","asyncToGenerator","regenerator_default","a","mark","_callee2","wrap","_context2","prev","next","restore_state","stop","char","e","target","value","key","_this$state","react_default","createElement","className","src","logo","alt","style","disabled","cols","rows","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","origin","fetch","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"0EACAA,EAAOC,QAAU,CACfC,eACE,+DACFC,gBACE,qFCLJH,EAAAC,QAAiBG,EAAAC,EAAuB,qDCAxCL,EAAAC,QAAiBG,EAAAC,EAAuB,wDCAxCL,EAAAC,QAAiBG,EAAAC,EAAuB,yWCWlCC,EAAeC,IAAY,iBAC3BC,EAAcD,IAAY,gBAa1BE,GAXSC,IAAGC,wCAYhB,iEAGF,SAASC,EAAeC,GACtB,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3B,IAAIC,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAON,GAAK,GACrBI,EAAIG,aAAe,cACnBH,EAAII,iBACF,OACA,WACqB,MAAfJ,EAAIK,OACNP,EAAQE,EAAIM,UAEZP,MAGJ,GAEFC,EAAIO,SAIR,IAAMC,EAAS,CACbC,OAAQ,CACNC,WAAY,MACZC,KAAI,GAAAC,OA9BU,GA8BV,gBACJC,WAAU,GAAAD,OA/BI,GA+BJ,OAEZE,MAAO,CACLC,UAAW,OACXC,UAAW,SACXN,WAAY,MACZC,KAAI,GAAAC,OArCU,GAqCV,gBACJC,WAAU,GAAAD,OAtCI,GAsCJ,QAId,SAASK,EAAQC,GACf,OAAO,IAAIrB,QAAQ,SAAAC,GAAO,OAAIqB,WAAWrB,EAASoB,SAgIrCE,cA5Hb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXC,UAAWtC,EACXuC,MAAM,EACNC,aAAc,IAGhBV,EAAKW,IAAMX,EAAKW,IAAIC,KAATX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACXc,OAAOH,IAAMX,EAAKW,IAElBX,EAAKe,SAAWf,EAAKe,SAASH,KAAdX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAChBA,EAAKgB,WAAahB,EAAKgB,WAAWJ,KAAhBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAbDA,2GAgBTiB,4EACHd,KAAKI,MAAME,sBACdN,KAAKe,SAAS,CAAET,MAAM,EAAMC,aAAc,KACpCS,yBAA0BF,UAChCG,QAAQC,IAAIF,GACZhB,KAAKmB,SAASC,aAAaJ,0BAGnBxB,EAAQ,gBAEyB,IADdQ,KAAKI,MAAtBG,aACSc,QAAQ,iCACvBrB,KAAKe,SAAS,CACZT,MAAM,mTASRgB,EAAK,QAEXlD,QAAQmD,IAAI,CAEVrD,EAAeJ,KACd0D,KAAK,SAAAC,GAA+B,IAAdC,EAAc5B,OAAA6B,EAAA,EAAA7B,CAAA2B,EAAA,MACrCG,EAAKT,SAAW,IAAIR,OAAOkB,WAAW,CACpCC,iBAEI,KACJC,KAAM,CAAE5D,IAAK6D,KACbC,SAAU,CAAE9D,IAAK+D,KAEjBC,IAAK,CAAEhE,IAAKP,EAAcwE,OAAO,EAAMC,KAAM,IAAMf,GACnDgB,WAAW,EACXC,YAAa,IAAMjB,EACnBkB,gBAAiB,EAAIlB,EACrBmB,eAAe,EACfC,kBAAkB,IAGpB/B,OAAOQ,SAAWS,EAAKT,SAEvBS,EAAKT,SAASwB,aAAa,iBAA3B7C,OAAA8C,EAAA,EAAA9C,CAAA+C,EAAAC,EAAAC,KAA6C,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC3CxB,EAAKT,SAASkC,cAAc3B,GADewB,EAAAE,KAAA,EAErC5D,EAAQ,KAF6B,cAG3CoC,EAAKb,SAAS,CAAET,MAAM,IAHqB4C,EAAAE,KAAA,EAIrCxB,EAAKpB,IAAIzC,GAAiB,GAJW,wBAAAmF,EAAAI,SAAAN,EAAAhD,UAO7C4B,EAAKT,SAASwB,aAAa,sBAAuB,SAAAY,GAAQ,IAClDhD,EAAiBqB,EAAKxB,MAAtBG,aACNA,GAAgBgD,EAChB3B,EAAKb,SAAS,CACZR,wJAMCiD,GACPxD,KAAKe,SAAS,CACZV,UAAWmD,EAAEC,OAAOC,2CAIbF,GACK,UAAVA,EAAEG,KACJ3D,KAAKQ,IAAIR,KAAKI,MAAMC,4CAIf,IAAAuD,EACqB5D,KAAKI,MAAzBE,EADDsD,EACCtD,KAAMD,EADPuD,EACOvD,UAEd,OACEwD,EAAAf,EAAAgB,cAAA,OAAKC,UAAU,OACbF,EAAAf,EAAAgB,cAAA,UAAQC,UAAU,cAChBF,EAAAf,EAAAgB,cAAA,OAAKE,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzCL,EAAAf,EAAAgB,cAAA,MAAIC,UAAU,aAAd,yBAGFF,EAAAf,EAAAgB,cAAA,YACEJ,MAAOrD,EACP8D,MAAOpF,EAAOM,MACd+E,SAAU9D,EACVM,SAAUZ,KAAKY,SACfC,WAAYb,KAAKa,WACjBwD,KAAM,GACNC,KAAM,KAGRT,EAAAf,EAAAgB,cAAA,WAAMxD,EAAO,iBAAmB,UAvJpB,UAyCFiE,aC1DZC,EAAcC,QACW,cAA7B9D,OAAO+D,SAASC,UAEe,UAA7BhE,OAAO+D,SAASC,UAEhBhE,OAAO+D,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTtD,KAAK,SAAA0D,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBhF,QACf2E,UAAUC,cAAcO,WAK1BtE,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBsE,MAAM,SAAAC,GACLxE,QAAQwE,MAAM,4CAA6CA,KC1EjEC,IAASC,OAAO9B,EAAAf,EAAAgB,cAAC8B,EAAD,MAASC,SAASC,eAAe,SDelC,WACb,GAA6C,kBAAmBf,UAAW,CAGzE,GADkB,IAAIgB,IAAI9H,GAAwB0C,OAAO+D,UAC3CsB,SAAWrF,OAAO+D,SAASsB,OAIvC,OAGFrF,OAAOhC,iBAAiB,OAAQ,WAC9B,IAAMmG,EAAK,GAAA3F,OAAMlB,GAAN,sBAEPuG,GAiDV,SAAiCM,GAE/BmB,MAAMnB,GACHtD,KAAK,SAAA3C,GAGkB,MAApBA,EAASD,SACuD,IAAhEC,EAASqH,QAAQC,IAAI,gBAAgB9E,QAAQ,cAG7C0D,UAAUC,cAAcoB,MAAM5E,KAAK,SAAA0D,GACjCA,EAAamB,aAAa7E,KAAK,WAC7Bb,OAAO+D,SAAS4B,aAKpBzB,EAAgBC,KAGnBU,MAAM,WACLvE,QAAQC,IACN,mEArEAqF,CAAwBzB,GAIxBC,UAAUC,cAAcoB,MAAM5E,KAAK,WACjCP,QAAQC,IACN,+GAMJ2D,EAAgBC,MC1CxB0B","file":"static/js/main.8d48e5d5.chunk.js","sourcesContent":["// This is autogenerated, please modify predeploy.js to change this\nmodule.exports = {\n  \"v86state.bin\":\n    \"https://storage.googleapis.com/hypertalk-static/v86state.bin\",\n  \"windows98.img\":\n    \"https://storage.googleapis.com/hypertalk-static/windows98.img\"\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.186ee9ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/seabios.b72845a6.bin\";","module.exports = __webpack_public_path__ + \"static/media/vgabios.1747aff3.bin\";","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport io from \"socket.io-client\";\n\nimport seabios from \"./bios/seabios.bin\";\nimport vgabios from \"./bios/vgabios.bin\";\n\nimport staticFiles from \"./staticFiles\";\n\nconst windows98URL = staticFiles[\"windows98.img\"];\nconst v86stateURL = staticFiles[\"v86state.bin\"];\n\nconst socket = io(process.env.REACT_APP_CHATSERVER_ENDPOINT);\n\n// fetch(process.env.REACT_APP_CHATSERVER_ENDPOINT).then((a) => {\n//   debugger\n// });\n\n// [:phoneme on][hxae<300,10>piy<300,10> brr<600,12>th<100>dey<600,10> tuw<600,15> yu<1200,14>_<120>][hxae<300,10>piy<300,10> brr<600,12>th<100>dey<600,10> tuw<600,17> yu<1200,15>_<120>][hxae<300,10>piy<300,10>brr<600,22>th<100>dey<600,19>dih<600,15>rdeh<600,14>ktao<600,12>k_<120>_<120>][hxae<300,20>piy<300,20> brr<600,19>th<100>dey<600,15> tuw<600,17> yu<1200,15>]\n\nconst FONT_SIZE = 14;\n// https://steamcommunity.com/sharedfiles/filedetails/?id=128648903\n// const WELCOME_MESSAGE = \"harder daddy\";\nconst WELCOME_MESSAGE =\n  \"welcome to [_<1,30>]hypurtalk! [:nk]i need help oh god please\";\nconst SHOW_SCREEN = false;\n\nfunction getURLAsBuffer(url) {\n  return new Promise((resolve, reject) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, true);\n    xhr.responseType = \"arraybuffer\";\n    xhr.addEventListener(\n      \"load\",\n      () => {\n        if (xhr.status === 200) {\n          resolve(xhr.response);\n        } else {\n          reject();\n        }\n      },\n      false\n    );\n    xhr.send();\n  });\n}\n\nconst styles = {\n  screen: {\n    whiteSpace: \"pre\",\n    font: `${FONT_SIZE}px monospace`,\n    lineHeight: `${FONT_SIZE}px`\n  },\n  input: {\n    marginTop: \"10px\",\n    textAlign: \"center\",\n    whiteSpace: \"pre\",\n    font: `${FONT_SIZE}px monospace`,\n    lineHeight: `${FONT_SIZE}px`\n  }\n};\n\nfunction timeout(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      whatToSay: WELCOME_MESSAGE,\n      busy: true,\n      serialOutput: \"\"\n    };\n\n    this.say = this.say.bind(this);\n    window.say = this.say;\n\n    this.onChange = this.onChange.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n  }\n\n  async say(string) {\n    if (!this.state.busy) {\n      this.setState({ busy: true, serialOutput: \"\" });\n      const sayText = `[:phoneme on]${string}213p`;\n      console.log(sayText);\n      this.emulator.serial0_send(sayText);\n\n      while (true) {\n        await timeout(2000);\n        const { serialOutput } = this.state;\n        if (serialOutput.indexOf(\"ready\") !== -1) {\n          this.setState({\n            busy: false\n          });\n          return;\n        }\n      }\n    }\n  }\n\n  async componentDidMount() {\n    const MB = 1024 * 1024;\n\n    Promise.all([\n      // getURLAsBuffer(windows98URL),\n      getURLAsBuffer(v86stateURL)\n    ]).then(([/*windows98,*/ v86State]) => {\n      this.emulator = new window.V86Starter({\n        screen_container: SHOW_SCREEN\n          ? document.getElementById(\"screen_container\")\n          : null,\n        bios: { url: seabios },\n        vga_bios: { url: vgabios },\n        // hda: { buffer: windows98 },\n        hda: { url: windows98URL, async: true, size: 300 * MB },\n        autostart: true,\n        memory_size: 128 * MB,\n        vga_memory_size: 8 * MB,\n        disable_mouse: true,\n        disable_keyboard: true\n      });\n\n      window.emulator = this.emulator;\n\n      this.emulator.add_listener(\"emulator-ready\", async () => {\n        this.emulator.restore_state(v86State);\n        await timeout(1000);\n        this.setState({ busy: false });\n        await this.say(WELCOME_MESSAGE, true);\n      });\n\n      this.emulator.add_listener(\"serial0-output-char\", char => {\n        let { serialOutput } = this.state;\n        serialOutput += char;\n        this.setState({\n          serialOutput\n        });\n      });\n    });\n  }\n\n  onChange(e) {\n    this.setState({\n      whatToSay: e.target.value\n    });\n  }\n\n  onKeyPress(e) {\n    if (e.key === \"Enter\") {\n      this.say(this.state.whatToSay);\n    }\n  }\n\n  render() {\n    const { busy, whatToSay } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Welcome to hypertalk</h1>\n        </header>\n\n        <textarea\n          value={whatToSay}\n          style={styles.input}\n          disabled={busy}\n          onChange={this.onChange}\n          onKeyPress={this.onKeyPress}\n          cols={80}\n          rows={10}\n        />\n\n        <pre>{busy ? \"Please wait...\" : \"Ready\"}</pre>\n\n        {SHOW_SCREEN && (\n          <div>\n            <div id=\"screen_container\">\n              <div style={styles.screen} />\n              <canvas style={{ display: \"none\" }} />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\")\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport registerServiceWorker from \"./registerServiceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\nregisterServiceWorker()\n"],"sourceRoot":""}